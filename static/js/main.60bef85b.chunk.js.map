{"version":3,"sources":["loader.gif","components/Results.js","actions/addNominee.js","actions/types.js","components/Nominations.js","actions/deleteNominee.js","components/SearchBar.js","App.js","serviceWorker.js","reducers/mainPageReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["module","exports","Results","handleOnClick","e","props","addNominee","movie","style","display","padding","this","Title","Year","undefined","mainPageState","nominations","find","imdbID","Button","variant","size","onClick","disabled","Component","connect","state","dispatch","type","payload","Nominations","deleteNominee","SearchBar","fetchResults","search","url","cancel","Axios","CancelToken","source","get","cancelToken","token","then","res","setState","results","data","Search","error","Error","isLoading","catch","isCancel","handleOnChange","keyword","target","value","handleSubmit","preventDefault","renderResults","className","textAlign","map","renderNominations","Fragment","key","showAlert","length","Alert","Heading","margin","width","Col","Form","onSubmit","InputGroup","InputGroupAddon","addonType","InputGroupText","icon","faSearch","Input","placeholder","onChange","src","Loader","alt","App","Boolean","window","location","hostname","match","initialState","localStorage","getItem","JSON","parse","combineReducers","action","updatedNominations","setItem","stringify","newNominations","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.60bef85b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.de50e2e9.gif\";","import React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { addNominee } from '../actions/addNominee'\nimport { connect } from 'react-redux';\n\nclass Results extends Component {\n\n    handleOnClick = (e) =>{\n        this.props.addNominee(this.props.movie);\n    }\n\n    render() {\n        return (\n            <div style={{display:\"flex\", padding:\"10px 10px\"}}>\n                <li>{this.props.movie.Title}{\" (\"+this.props.movie.Year+\")\"}</li>&nbsp;\n                {(this.props.mainPageState.nominations.find(movie=>{ return movie.imdbID === this.props.movie.imdbID}) === undefined) ? (\n                    <Button variant=\"primary\" size=\"sm\" onClick={this.handleOnClick}>Nominate</Button>\n                ):(\n                    <Button variant=\"primary\" size=\"sm\" disabled>Nominate</Button>\n                )}                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    mainPageState: state.mainPageState\n});\n\nexport default connect(mapStateToProps,{ addNominee })(Results)\n\n\n","import { ADD_NOMINEE } from './types';\n\n\nexport const addNominee = (movie) =>{\n    return(dispatch) => {\n        dispatch({\n            type: ADD_NOMINEE,\n            payload: movie\n        });\n    }\n}","export const ADD_NOMINEE = 'ADD_NOMINEE';\nexport const DEL_NOMINEE = 'DEL_NOMINEE';","import React, { Component } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { deleteNominee } from '../actions/deleteNominee'\nimport { connect } from 'react-redux';\n\nclass Nominations extends Component {\n\n    handleOnClick = (e) =>{\n        this.props.deleteNominee(this.props.movie);\n    }\n\n    render() {\n        return (\n            <div style={{display:\"flex\", padding:\"10px 10px\"}}>\n                <li>{this.props.movie.Title}{\" (\"+this.props.movie.Year+\")\"}</li>&nbsp;\n                <Button variant=\"secondary\" size=\"sm\" onClick={this.handleOnClick}>Remove</Button>          \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    mainPageState: state.mainPageState\n});\n\nexport default connect(mapStateToProps,{ deleteNominee })(Nominations)\n\n\n","import { DEL_NOMINEE } from './types';\n\n\nexport const deleteNominee = (movie) =>{\n    return(dispatch) => {\n        dispatch({\n            type: DEL_NOMINEE,\n            payload: movie\n        });\n    }\n}","import React, { Component } from 'react'\nimport {\n    Form,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Col\n} from \"reactstrap\";\nimport { Alert } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport Results from './Results'\nimport { connect } from 'react-redux';\nimport Axios from 'axios'\nimport Loader from '../loader.gif'\nimport '../Search.css'\nimport Nominations from './Nominations'\n\nclass SearchBar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { keyword: \"\", results : [], error: \"\", isLoading: false, showAlert: false};\n    \n        this.cancel = ''\n    }\n\n    fetchResults = (search) =>{\n        const url = `http://www.omdbapi.com/?apikey=9c54a82a&s=${search}`\n\n        if (this.cancel) {\n            // Cancel the previous request before making a new request\n            this.cancel.cancel();\n        }\n        // Create a new CancelToken\n        this.cancel = Axios.CancelToken.source();\n        Axios.get(url, {\n            cancelToken: this.cancel.token\n        })\n        .then(res=>{\n            this.setState({\n\t\t\t\tresults: res.data.Search,\n\t\t\t\terror: res.data.Error,\n\t\t\t\tisLoading: false,\n\t\t\t});\n        })\n        .catch((error) => {\n\t\t\tif (Axios.isCancel(error) || error) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\terror: 'Failed to fetch results.Please check network',\n\t\t\t\t});\n\t\t\t}\n\t\t});\n    }\n    \n    handleOnChange = (e) =>{\n        const keyword = e.target.value;\n        if ( keyword === \"\" ) {\n            this.setState({ keyword, results: [], error: '' } );\n        } else {\n            this.setState({ keyword, isLoading: true, error: '' }, () => {\n                this.fetchResults(keyword);\n            });\n        }\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n    }\n\n    renderResults = () =>{\n        //Create Movies Result List\n        const { results, keyword } = this.state;\n        if(results !== undefined){\n            return(\n                <div className=\"results-container\">\n                    <h4 style={{textAlign:\"justify\", padding:\"10px 30px\"}}>Results for {keyword}...</h4>\n                    <ul>\n                        {results.map( movie =>{\n                            return(\n                                <Results movie={movie}/>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        }\n        \n    }\n\n    \n    renderNominations = () =>{\n        //Create Nominations List\n        const { nominations } = this.props.mainPageState\n        if(nominations !== undefined){\n            return(\n                <div>\n                    <ul>\n                        {nominations.map( movie =>{\n                            return(\n                                <React.Fragment key={movie.imdbID}>\n                                    <Nominations movie={movie}/>\n                                </React.Fragment>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        }\n    }\n\n    \n\n\n    render() {\n        const {error, isLoading } = this.state;\n        return (\n            <div>\n                <br/><br/>\n                {/*Show banner if number of nominations equals 5*/}\n                {\n                    this.props.mainPageState.nominations.length >= 5 &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>5 Nominations Banner</Alert.Heading>\n                        <p>You have nominated atleast 5 movies! Enjoy!</p>\n                    </Alert>\n                }\n\n\n                {/*Form for Movie Search*/}\n                <div style={{padding:\"0 20%\", margin: \"0\", width:\"auto\"}}> \n                        <Col>\n                        <Form onSubmit={this.handleSubmit}>\n                            <InputGroup className=\"mb-4\">\n                            <InputGroupAddon addonType=\"prepend\">\n                                <InputGroupText>\n                                    <FontAwesomeIcon icon={faSearch} />\n                                </InputGroupText>\n                            </InputGroupAddon>\n                            <Input placeholder=\"Search for a movie\" type=\"text\" onChange={this.handleOnChange}/>\n                            </InputGroup>\n                        </Form>\n                        </Col>                  \n                </div>\n               \n               <div style={{display:\"flex\"}}>\n                    \n                    {/*Movies Search Result*/}\n                    {this.state.keyword !== \"\" && this.renderResults()}\n                    \n                    {/*Nominations Result*/}\n                    <div className=\"nominations-container\">\n                    <h4 style={{textAlign:\"justify\", padding:\"10px 30px\"}}>Nominations</h4>\n                        {!(this.props.mainPageState.nominations.length) ? (\n                            <p>No nominations added. Please search for a movie and add them.</p>\n                        ):(\n                            this.renderNominations()\n                        )\n                           }\n                    </div>\n               </div>\n                \n            \n                \n                {/*Too many results or movie not found*/}\n               { error && <h3 className=\"errorMessage\">{error}</h3> }\n                \n               <img  src={Loader} className={`search-loading ${isLoading ? 'show' : 'hide' }`}  alt=\"loader\"/>\n\n               \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    mainPageState: state.mainPageState\n});\n\nexport default connect(mapStateToProps)(SearchBar)\n\n","import React from 'react';\nimport './App.css';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"pageHeading\">THE SHOPPIES</h1>\n      <SearchBar/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_NOMINEE, DEL_NOMINEE } from '../actions/types';\n\nconst initialState = {\n    nominations : localStorage.getItem('nominations') == null ? [] : JSON.parse(localStorage.getItem('nominations'))\n}\n\n\nexport default (state = initialState, action) => {\n    \n    switch(action.type){\n\n        case ADD_NOMINEE : \n            let updatedNominations = [...state.nominations, action.payload]\n            localStorage.setItem('nominations', JSON.stringify(updatedNominations))   \n            return{     \n                ...state,       \n                nominations: [...state.nominations, action.payload]\n            }\n\n        case DEL_NOMINEE :      \n            let newNominations = state.nominations.filter( movie => {\n            return movie.imdbID !== action.payload.imdbID             \n        })\n        localStorage.setItem('nominations', JSON.stringify(newNominations))  \n        return{\n            ...state,\n            nominations: newNominations\n        }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport mainPageReducer from './mainPageReducer';\n\nexport default combineReducers({\n    mainPageState: mainPageReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst intialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, intialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store  from './store';\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}